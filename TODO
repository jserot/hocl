SYNTAX
- `initially` clause for specifying delays (ex: `val rec (o,z) = f (i, z initially 0)`) 
- allow parameters also on output (ex: `node foo in (k: int param, i: int) out (o: int, kp: int param)`)
- special syntax for conditionals (?)

COMPILER
- allow arbitrary infix operators to be defined in prelude or elsewhere (the set of such operators
  is currently restricted by the lexer)
- relocalize backend-specific error handling fns in the corresp. source file (?)

STDLIB
- add `mapi`, `iteri` HOFs

DOT BACKEND
- cluster-based drawing of hierarchy graphical in the .dot backend (?)

SYSTEMC BACKEND
- -sc_stop_idle option

PREESM BACKEND
- clarify the description of "src" and "snk" nodes in .pi files concerning the cfg inputs :
  + preesm seems to accept the explicit form ...
  + ... but some examples in the repo (ex: SIFT) seem to omit the decl of cfg input ports in src and snk nodes ..
  + the current implementation of `hoclc` and `pi2hcl` use the explicit form
- support expr-annot for src and snk nodes in subgraphs (cf SIFT/Htop_sift.pi/{image}src for ex)
- dynamic parameters
- delays
- conditional activation of actors (to support parameter-based conditional, a la PiSDF)

DIF BACKEND
- support parameters and hierarchy

VHDL BACKEND
- TBW ?

TOOLS/PI2HCL
- translation of cyclic graphs (ex: examples/sift)
- handling of delay nodes (ex: examples/sift)
- implicit vs. explicit cfg inputs for src/snk nodes
- port annotations (vs. expr)

DOC
- write dedicated sections for backends (Preesm, DIF, ...)
- automatize generation of option description in [using.tex] from src dir

DIST
- build lib/etc/Makefile.app by instantiating a template with paths obtained from configure

